---

- name: Ensure tinc hosts dir exist
  file:
    path: /etc/tinc/vpn0/hosts/
    state: directory
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_user}}"
    mode: 0775

- name: copy tinc config
  template:
    src: tinc.conf.j2
    dest: /etc/tinc/{{ netname }}/tinc.conf
    owner: root
    group: root
    mode: '0644'
  notify:
  - reload tinc

- name: copy file from template
  template: >
    src="{{item.src}}"
    dest="{{item.dest}}"
    owner=root
    group=root
    mode='0744'
  with_items:
    - {src: nets.boot.j2, dest: /etc/tinc/nets.boot}
    - {src: tinc-up.j2, dest: "/etc/tinc/{{ netname }}/tinc-up"}
    - {src: tinc-down.j2, dest: "/etc/tinc/{{ netname }}/tinc-down"}
  notify:
  - restart tinc


- name: ensure tinc hosts file binds to physical ip address
  lineinfile: >
    dest="/etc/tinc/{{ netname }}/hosts/{{hostvars[inventory_hostname].ansible_hostname}}"
    line="Address = {{ inventory_hostname }}"
    create=yes
    owner="{{ansible_ssh_user}}"
    group="{{ansible_ssh_user}}"
  notify:
  - restart tinc

- name: ensure subnet ip address is properly set in tinc host file
  lineinfile: >
    dest=/etc/tinc/{{ netname }}/hosts/{{hostvars[inventory_hostname].ansible_hostname}}
    line="Subnet = {{ vpn_ip }}/{{ vpn_subnet_cidr_netmask }}"
    create=yes

- name: create port line
  lineinfile: >
    dest=/etc/tinc/{{ netname }}/hosts/{{hostvars[inventory_hostname].ansible_hostname}}
    line="Port = 655"
    create=yes

- name: check whether /etc/tinc/netname/hosts/inventory_hostname contains "-----END RSA PUBLIC KEY-----"
  command: awk '/^-----END RSA PUBLIC KEY-----$/'  /etc/tinc/{{ netname }}/hosts/{{hostvars[inventory_hostname].ansible_hostname}}
  changed_when: "public_key.stdout != '-----END RSA PUBLIC KEY-----'"
  register: public_key

- name: delete private key and regenerate keypair if public key is absent from tinc hosts file
  file: >
    path=/etc/tinc/{{ netname }}/rsa_key.priv
    state=absent
  when: public_key.changed

- name: create tinc private key (and append public key to tincd hosts file)
  shell: /sbin/tincd -n {{ netname }} -K4096
  args:
    creates: /etc/tinc/{{ netname }}/rsa_key.priv

- name: fetch tinc hosts file after key creation
  fetch: >
    src=/etc/tinc/{{ netname }}/hosts/{{hostvars[inventory_hostname].ansible_hostname}}
    dest=fetch/{{hostvars[inventory_hostname].ansible_hostname}}
    flat=yes

- name: sync the fetched tinc hosts files on each host
  synchronize: >
    src=fetch/
    dest=/etc/tinc/{{ netname }}/hosts/

- name: Ensure tinc hosts dir exist
  file:
    path: /etc/tinc/vpn0/hosts/
    state: directory
    owner: root
    group: root
    mode: 0775
  notify:
  - restart tinc
